name: CI_CD

on:
  push:
    branches:
      - main

env:
  SPRING_PROFILES_ACTIVE: prod
  S3_BUCKET_NAME: pizzakoala
  RESOURCE_PATH: ./src/main/resources/application-deploy.yaml
  CODE_DEPLOY_APPLICATION_NAME: CODE-DEPLOY-PIZZAKOALA
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: AWS-DEPLOY-GROUP
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET }}
  RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}  # RDS 호스트명
  RDS_PORT: ${{ secrets.RDS_PORT }}  # RDS 포트
  RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}  # RDS 데이터베이스 이름
  RDS_USERNAME: ${{ secrets.RDS_USERNAME }}  # RDS 사용자명
  RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}  # RDS 비밀번호
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}  # Google Client ID
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}  # Google Client Secret

jobs:
  builds:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 21

      - name: Inject environment variables into application-deploy.yaml
        run: |
          # 환경 변수 설정
          export JWT_SECRET_KEY="${{ secrets.JWT_SECRET }}"
          export GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
          export GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
          export RDS_HOSTNAME="${{ secrets.RDS_HOSTNAME }}"
          export RDS_PORT="${{ secrets.RDS_PORT }}"
          export RDS_DB_NAME="${{ secrets.RDS_DB_NAME }}"
          export RDS_USERNAME="${{ secrets.RDS_USERNAME }}"
          export RDS_PASSWORD="${{ secrets.RDS_PASSWORD }}"

          # 파일에서 변수 치환
          sed -i 's|${JWT_SECRET_KEY}|'"$JWT_SECRET_KEY"'|g' ${{ env.RESOURCE_PATH }}
          sed -i 's|${GOOGLE_CLIENT_ID}|'"$GOOGLE_CLIENT_ID"'|g' ${{ env.RESOURCE_PATH }}
          sed -i 's|${GOOGLE_CLIENT_SECRET}|'"$GOOGLE_CLIENT_SECRET"'|g' ${{ env.RESOURCE_PATH }}
          sed -i 's|${RDS_HOSTNAME}|'"$RDS_HOSTNAME"'|g' ${{ env.RESOURCE_PATH }}
          sed -i 's|${RDS_PORT}|'"$RDS_PORT"'|g' ${{ env.RESOURCE_PATH }}
          sed -i 's|${RDS_DB_NAME}|'"$RDS_DB_NAME"'|g' ${{ env.RESOURCE_PATH }}
          sed -i 's|${RDS_USERNAME}|'"$RDS_USERNAME"'|g' ${{ env.RESOURCE_PATH }}
          sed -i 's|${RDS_PASSWORD}|'"$RDS_PASSWORD"'|g' ${{ env.RESOURCE_PATH }}
#      - name: Set yml file
#        uses: microsoft/variable-substitution@v1
#        with:
#          files: ${{ env.RESOURCE_PATH }}
#        env:
#          jwt.secret-key: ${{ secrets.JWT_SECRET }}
#          google.client.id: ${{ secrets.GOOGLE_CLIENT_ID }}
#          google.client.secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
#          algorithm: ${{secrets.ALGORITHM}}
#          rds.hostname: ${{ secrets.RDS_HOSTNAME }}
#          rds.port: ${{ secrets.RDS_PORT }}
#          rds.db.name: ${{ secrets.RDS_DB_NAME }}
#          rds.username: ${{ secrets.RDS_USERNAME }}
#          rds.password: ${{ secrets.RDS_PASSWORD }}

      - name: Debug Environment Variables
        run: |
          echo "RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }}"
          echo "RDS_PORT=${{ secrets.RDS_PORT }}"
          echo "RDS_DB_NAME=${{ secrets.RDS_DB_NAME }}"
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}"
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}"
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET }}"
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}"
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}"


      - name: Grant execute permission for gradle
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

#      - name: Make zip file
#        run: zip -r ./$GITHUB_SHA .
#        shell: bash

      - name: Make zip file
        run: zip -r $GITHUB_SHA.zip . -x "*.git*"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ env.S3_BUCKET_NAME }}/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=$GITHUB_SHA.zip


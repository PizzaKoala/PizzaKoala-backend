plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.PizzaKoala'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
//configurations.all {
//		exclude group: 'commons-logging', module: 'commons-logging'
//}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'

//	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.2.0-M1'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.757'

	implementation 'javax.xml.bind:jaxb-api:2.3.0'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
//	//swagger javadocs
//	annotationProcessor "com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0"
//	implementation 'org.springframework.boot:spring-boot-starter-data-rest'

//	// Logback for logging
//	implementation 'ch.qos.logback:logback-classic'
//
//	// SLF4J for logging
//	implementation 'org.slf4j:slf4j-api'
	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

//
//// gradle clean 시에 QClass 디렉토리 삭제
//	 clean {	delete file('src/main/generated')}


tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}
bootJar {
	enabled = true
}

/*
* plain.jar는 jar파일과 다르게 dependencies를 제외한 class/resources 만을 포함하고 있어서 java -jar옵션으로 jar파일을 실행할수없다.
 */